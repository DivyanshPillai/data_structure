class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        vector<int> maxLeft(n);
        vector<int> maxRight(n);

        maxLeft[0] = 0;
        for(int i = 1; i < n; i++){
            maxLeft[i] = max(maxLeft[i-1], height[i-1]);
        }

        maxRight[n-1] = 0;
        for(int i = n-2; i >= 0; i--){
            maxRight[i] = max(maxRight[i+1], height[i+1]);
        }

        int minHeight = INT_MAX;
        int ans = 0;

        for(int i = 1; i < n-1; i++){
            minHeight = min(maxLeft[i], maxRight[i]);
            if(minHeight - height[i] >= 0){
                ans += minHeight - height[i];
            }
        }

        return ans;
    }
};
