void heapifyMax(int arr[], int n, int i){
    int largest = i;
    int left = 2*i;
    int right = 2*i+1;

    if(left < n && arr[largest] < arr[left]){
        largest = left;
    }
    if(right < n && arr[largest] < arr[right]){
        largest = right;
    }

    if(largest != i){
        swap(arr[largest], arr[i]);
        heapifyMax(arr, n, largest);
    }
}

vector<int> buildMaxHeap(vector<int> &arr)
{
    int n = arr.size();
    for(int i = n/2; i >= 1; i--){
        heapifyMax(arr, n, i);
    }

    return arr;
}
