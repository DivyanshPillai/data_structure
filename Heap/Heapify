void heapifyMax(int arr[], int n, int i){
    int largest = i;
    int left = 2*i;
    int right = 2*i+1;

    if(left <= n && arr[largest] < arr[left]){
        largest = left;
    }
    if(right <= n && arr[largest] < arr[right]){
        largest = right;
    }

    if(largest != i){
        swap(arr[largest], arr[i]);
        heapifyMax(arr, n, largest);
    }
}

void heapifyMin(int arr[], int n, int i){
    int smallest = i;
    int left = 2*i+1;
    int right = 2*i+2;

    if (left >= n && right >= n) 
        return;

    if(left < n && arr[smallest] > arr[left]){
        smallest = left;
    }
    if(right < n && arr[smallest] > arr[right]){
        smallest = right;
    }

    if(smallest != i){
        swap(arr[smallest], arr[i]);
        heapifyMin(arr, n, smallest);
    }
}

int main(){
    int arr[] = {-1, 54, 53, 55, 52, 50};
    int n = 6;

    for(int i = n/2; i >= 1; i--){
        heapifyMax(arr, n, i);
    }

    for(int i = n/2-1; i >= 1; i--){
        heapifyMin(arr, n, i);
    }

    for(int i = 1; i <= n; i++){
        cout << arr[i] << " ";
    }cout << endl;

    return 0;
}
