class Solution {
public:
    bool isPalindrome(string s, int start, int end){
        while(start <= end){
            if(s[start] != s[end]){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }

    void part(vector<vector<string>> &ans, vector<string> &res, string s, int index){
        if(index == s.size()){
            ans.push_back(res);
            return;
        }

        for(int i = index; i < s.size(); i++){
            if(isPalindrome(s, index, i)){
                res.push_back(s.substr(index, i-index+1));
                part(ans, res, s, i+1);
                res.pop_back();
            }
        }
    }

    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> res;
        part(ans, res, s, 0);
        return ans;
    }
};
