class Solution {
private:
    pair<int, int> solve(TreeNode* &root){
        if(root == NULL){
            pair<int, int> p = make_pair(0, 0);
            return p;
        }

        pair<int, int> left = solve(root->left);
        pair<int, int> right = solve(root->right);

        int leftAns = left.first;
        int rightAns = right.first;
        int comb = left.second + right.second;

        pair<int, int> ans;
        ans.first = max(leftAns, max(comb, rightAns));
        ans.second = max(left.second, right.second) + 1;

        return ans;
    }

public:
    int diameterOfBinaryTree(TreeNode* root) {
        return solve(root).first;
    } 
};
